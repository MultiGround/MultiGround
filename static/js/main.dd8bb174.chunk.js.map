{"version":3,"sources":["Modal/Modal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Modal","props","message","createPortal","style","display","justifyContent","alignItems","position","bottom","left","width","height","textAlign","borderRadius","background","fontSize","color","document","getElementById","copyToClipboard","navigator","clipboard","writeText","App","useState","isShowing","setIsShowing","useEffect","notiTimer","setTimeout","clearTimeout","className","onClick","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"uLAqCeA,MAlCf,SAAeC,GACX,IAAMC,EAAkBD,EAAMC,QAC9B,OAAOC,uBACH,qBACIC,MAAO,CACHC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,SAAU,QACVC,OAAQ,GACRC,KAAM,EACNC,MAAO,OACPC,OAAQ,IAThB,SAYI,qBACIR,MAAO,CACHO,MAAO,MACPE,UAAW,SACXC,aAAc,GACdC,WAAY,OACZC,SAAU,GAEVC,MAAO,SARf,SAWI,4BAAIf,QAIZgB,SAASC,eAAe,WCWhC,IAAMC,EAAkB,WACpBC,UAAUC,UAAUC,UAAU,qBAGnBC,EAzCf,WAEI,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAcA,OATAC,qBAAU,WACN,GAAGF,EAAW,CACV,IAAMG,EAAYC,YAAW,WACzBH,GAAa,KACd,KACH,OAAO,kBAAMI,aAAaF,OAE/B,CAACH,IAGA,sBAAKM,UAAW,MAAhB,UACI,sIACA,yDACA,sBACA,4EACA,8EACA,gCACI,wBAAQA,UAAW,MAAnB,+DADJ,OAGI,wBAAQA,UAAW,MAAOC,QAvBpB,WACdN,GAAa,GACbP,KAqBQ,sDAEJ,8BAAMM,GAAa,cAAC,EAAD,CAAOxB,QAAQ,2DAClC,sBAAK8B,UAAW,SAAhB,UACI,mBAAGE,KAAK,GAAR,kBACA,mBAAGA,KAAK,iCAAR,2BCxBDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,EAAD,IACF3B,SAASC,eAAe,SAM1BgB,K","file":"static/js/main.dd8bb174.chunk.js","sourcesContent":["import {createPortal} from \"react-dom\";\n\n\nfunction Modal(props: {message: string}) {\n    const message: string = props.message;\n    return createPortal(\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                position: \"fixed\",\n                bottom: 70,\n                left: 0,\n                width: \"100%\",\n                height: 50,\n            }}\n        >\n            <div\n                style={{\n                    width: \"20%\",\n                    textAlign: \"center\",\n                    borderRadius: 30,\n                    background: \"grey\",\n                    fontSize: 20,\n\n                    color: \"white\",\n                }}\n            >\n                <p>{message}</p>\n            </div>\n        </div>,\n        //@ts-ignore\n        document.getElementById(\"modal\")\n    );\n}\n\nexport default Modal;","import React, {MouseEventHandler, useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Modal from \"./Modal/Modal\";\nimport {Simulate} from \"react-dom/test-utils\";\n\n\nfunction App() {\n\n    const [isShowing, setIsShowing] = useState(false);\n    const openModal = () => {\n        setIsShowing(true);\n        copyToClipboard();\n    };\n    useEffect(() =>  {\n        if(isShowing) {\n            const notiTimer = setTimeout(() => {\n                setIsShowing(false);\n            }, 3000);\n            return () => clearTimeout(notiTimer);\n        }\n    }, [isShowing]);\n\n    return (\n        <div className={\"App\"}>\n            <h1>멀티그라운드에 오신 것을 환영합니다!</h1>\n            <h2>Welcome to MultiGround!</h2>\n            <p/>\n            <p>서버 주소: giftshower.games</p>\n            <p>서버 버전: 1.17.1-MultiGround</p>\n            <div>\n                <button className={\"btn\"}>런처 다운로드하기</button>\n                &nbsp;\n                <button className={\"btn\"} onClick={openModal}>주소 복사하기</button>\n            </div>\n            <div>{isShowing && <Modal message=\"서버 주소 복사 완료!\" />}</div>\n            <div className={\"navbar\"}>\n                <a href=\"\">Home</a>\n                <a href=\"https://github.com/MultiGround\">GitHub</a>\n            </div>\n        </div>\n    );\n}\n\nconst copyToClipboard = () =>{\n    navigator.clipboard.writeText(\"giftshower.games\");\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}